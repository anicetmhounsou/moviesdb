apply plugin: 'com.android.application'
apply plugin: 'io.fabric'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.hawksteam.movies"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "BASE_URL", "\"http://api.themoviedb.org/\""
        buildConfigField "String", "API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""

    }
    buildTypes {
        debug {
            //buildConfigField("String", "BASE_URL", "\"http://api.themoviedb.org/\"")
            //buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2\"")
            //buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:support-v4:27.1.1'
    //for crash report integration
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.android.gms:play-services-plus:16.0.0'
    //implementation 'com.google.firebase:firebase-crash:16.2.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'
    //end crash report integraion
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:palette-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // view model
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.lifecycle"

    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"

    // image
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // database
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomDatabase"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomDatabase"

    // Retrofit and OkHttp
    // OkHttp interceptors for logging
    //retrofit and rxjava
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    //implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.retrofitRxjavaVersion"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpLoggingVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$rootProject.okhttpVersion"


}


def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename);
        }
    } else {
        print(filename + " does not exist!")
    }
}


apply plugin: 'com.google.gms.google-services'
